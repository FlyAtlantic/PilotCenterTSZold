<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="cProgressHourAward.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        CoShZHMAAAAASUVORK5CYII=
</value>
  </data>
  <data name="cProgressBarOverall.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        CoShZHMAAAAASUVORK5CYII=
</value>
  </data>
</root>